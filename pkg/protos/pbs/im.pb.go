// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: im.proto

package pbs

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// 消息操作类型 128 , 2字节
type Action int32

const (
	Action_GetMessageID Action = 0   // 获取消息ID
	Action_SignIn       Action = 1   // 设备登录
	Action_SyncTrigger  Action = 2   // 消息同步触发
	Action_Message      Action = 3   // 消息
	Action_MessageACK   Action = 4   // 消息回执
	Action_Auth         Action = 10  // 连接认证
	Action_Quit         Action = 11  // 客户端退出
	Action_Headbeat     Action = 100 // 心跳
)

// Enum value maps for Action.
var (
	Action_name = map[int32]string{
		0:   "GetMessageID",
		1:   "SignIn",
		2:   "SyncTrigger",
		3:   "Message",
		4:   "MessageACK",
		10:  "Auth",
		11:  "Quit",
		100: "Headbeat",
	}
	Action_value = map[string]int32{
		"GetMessageID": 0,
		"SignIn":       1,
		"SyncTrigger":  2,
		"Message":      3,
		"MessageACK":   4,
		"Auth":         10,
		"Quit":         11,
		"Headbeat":     100,
	}
)

func (x Action) Enum() *Action {
	p := new(Action)
	*p = x
	return p
}

func (x Action) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Action) Descriptor() protoreflect.EnumDescriptor {
	return file_im_proto_enumTypes[0].Descriptor()
}

func (Action) Type() protoreflect.EnumType {
	return &file_im_proto_enumTypes[0]
}

func (x Action) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Action.Descriptor instead.
func (Action) EnumDescriptor() ([]byte, []int) {
	return file_im_proto_rawDescGZIP(), []int{0}
}

// 消息类型
type MessageCode int32

const (
	MessageCode_MessageCodeCustom   MessageCode = 0 // 自定义
	MessageCode_MessageCodeText     MessageCode = 1 // 普通文本消息
	MessageCode_MessageCodeImage    MessageCode = 2 // 图片消息
	MessageCode_MessageCodeLocation MessageCode = 3 // 位置
	MessageCode_MessageCodeVideo    MessageCode = 4 // 视频消息
	MessageCode_MessageCodeVoice    MessageCode = 5 // 语音消息
	MessageCode_MessageCodeFile     MessageCode = 6 // 文件消息
	MessageCode_MessageCodeCommand  MessageCode = 7 // 指令推送
)

// Enum value maps for MessageCode.
var (
	MessageCode_name = map[int32]string{
		0: "MessageCodeCustom",
		1: "MessageCodeText",
		2: "MessageCodeImage",
		3: "MessageCodeLocation",
		4: "MessageCodeVideo",
		5: "MessageCodeVoice",
		6: "MessageCodeFile",
		7: "MessageCodeCommand",
	}
	MessageCode_value = map[string]int32{
		"MessageCodeCustom":   0,
		"MessageCodeText":     1,
		"MessageCodeImage":    2,
		"MessageCodeLocation": 3,
		"MessageCodeVideo":    4,
		"MessageCodeVoice":    5,
		"MessageCodeFile":     6,
		"MessageCodeCommand":  7,
	}
)

func (x MessageCode) Enum() *MessageCode {
	p := new(MessageCode)
	*p = x
	return p
}

func (x MessageCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MessageCode) Descriptor() protoreflect.EnumDescriptor {
	return file_im_proto_enumTypes[1].Descriptor()
}

func (MessageCode) Type() protoreflect.EnumType {
	return &file_im_proto_enumTypes[1]
}

func (x MessageCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MessageCode.Descriptor instead.
func (MessageCode) EnumDescriptor() ([]byte, []int) {
	return file_im_proto_rawDescGZIP(), []int{1}
}

// 会话类型(聊天室类型), 单聊、群聊、系统消息、聊天室、客服
type ChatroomType int32

const (
	ChatroomType_Unknown ChatroomType = 0 // 未知
	ChatroomType_Single  ChatroomType = 1 // 单聊
	ChatroomType_Group   ChatroomType = 2 // 群聊
)

// Enum value maps for ChatroomType.
var (
	ChatroomType_name = map[int32]string{
		0: "Unknown",
		1: "Single",
		2: "Group",
	}
	ChatroomType_value = map[string]int32{
		"Unknown": 0,
		"Single":  1,
		"Group":   2,
	}
)

func (x ChatroomType) Enum() *ChatroomType {
	p := new(ChatroomType)
	*p = x
	return p
}

func (x ChatroomType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ChatroomType) Descriptor() protoreflect.EnumDescriptor {
	return file_im_proto_enumTypes[2].Descriptor()
}

func (ChatroomType) Type() protoreflect.EnumType {
	return &file_im_proto_enumTypes[2]
}

func (x ChatroomType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ChatroomType.Descriptor instead.
func (ChatroomType) EnumDescriptor() ([]byte, []int) {
	return file_im_proto_rawDescGZIP(), []int{2}
}

// 消息包
type MsgPackage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version    int32  `protobuf:"varint,1,opt,name=Version,proto3" json:"Version,omitempty"`               // 版本
	Action     Action `protobuf:"varint,2,opt,name=Action,proto3,enum=pbs.Action" json:"Action,omitempty"` // 操作方法
	SequenceId int32  `protobuf:"varint,3,opt,name=SequenceId,proto3" json:"SequenceId,omitempty"`         // 用户消息发送序列号
	BodyLength int32  `protobuf:"varint,4,opt,name=BodyLength,proto3" json:"BodyLength,omitempty"`         // 消息长度
	BodyData   []byte `protobuf:"bytes,5,opt,name=BodyData,proto3" json:"BodyData,omitempty"`              // 消息体
}

func (x *MsgPackage) Reset() {
	*x = MsgPackage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_im_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgPackage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgPackage) ProtoMessage() {}

func (x *MsgPackage) ProtoReflect() protoreflect.Message {
	mi := &file_im_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgPackage.ProtoReflect.Descriptor instead.
func (*MsgPackage) Descriptor() ([]byte, []int) {
	return file_im_proto_rawDescGZIP(), []int{0}
}

func (x *MsgPackage) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *MsgPackage) GetAction() Action {
	if x != nil {
		return x.Action
	}
	return Action_GetMessageID
}

func (x *MsgPackage) GetSequenceId() int32 {
	if x != nil {
		return x.SequenceId
	}
	return 0
}

func (x *MsgPackage) GetBodyLength() int32 {
	if x != nil {
		return x.BodyLength
	}
	return 0
}

func (x *MsgPackage) GetBodyData() []byte {
	if x != nil {
		return x.BodyData
	}
	return nil
}

// 消息体 - 获取消息ID
type MsgID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChatroomId int64  `protobuf:"varint,2,opt,name=ChatroomId,proto3" json:"ChatroomId,omitempty"` // 聊天室ID
	UserId     int64  `protobuf:"varint,5,opt,name=UserId,proto3" json:"UserId,omitempty"`         // 用户ID
	DeviceID   string `protobuf:"bytes,6,opt,name=DeviceID,proto3" json:"DeviceID,omitempty"`      // 设备ID
	ClientType string `protobuf:"bytes,7,opt,name=ClientType,proto3" json:"ClientType,omitempty"`  // 客户端类型
}

func (x *MsgID) Reset() {
	*x = MsgID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_im_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgID) ProtoMessage() {}

func (x *MsgID) ProtoReflect() protoreflect.Message {
	mi := &file_im_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgID.ProtoReflect.Descriptor instead.
func (*MsgID) Descriptor() ([]byte, []int) {
	return file_im_proto_rawDescGZIP(), []int{1}
}

func (x *MsgID) GetChatroomId() int64 {
	if x != nil {
		return x.ChatroomId
	}
	return 0
}

func (x *MsgID) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *MsgID) GetDeviceID() string {
	if x != nil {
		return x.DeviceID
	}
	return ""
}

func (x *MsgID) GetClientType() string {
	if x != nil {
		return x.ClientType
	}
	return ""
}

// 消息体 - 普通消息
type MsgItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code            MessageCode  `protobuf:"varint,1,opt,name=Code,proto3,enum=pbs.MessageCode" json:"Code,omitempty"`                  // 消息(类型)码
	ChatroomType    ChatroomType `protobuf:"varint,2,opt,name=ChatroomType,proto3,enum=pbs.ChatroomType" json:"ChatroomType,omitempty"` // 聊天室类型
	ChatroomId      int64        `protobuf:"varint,3,opt,name=ChatroomId,proto3" json:"ChatroomId,omitempty"`                           // 聊天室ID
	Content         string       `protobuf:"bytes,4,opt,name=Content,proto3" json:"Content,omitempty"`                                  // 消息内容
	MessageId       string       `protobuf:"bytes,5,opt,name=MessageId,proto3" json:"MessageId,omitempty"`                              // 消息ID
	UserId          int64        `protobuf:"varint,6,opt,name=UserId,proto3" json:"UserId,omitempty"`                                   // 用户ID
	DeviceID        string       `protobuf:"bytes,7,opt,name=DeviceID,proto3" json:"DeviceID,omitempty"`                                // 设备ID
	ClientType      string       `protobuf:"bytes,8,opt,name=ClientType,proto3" json:"ClientType,omitempty"`                            // 客户端类型
	MessageSendTime int64        `protobuf:"varint,9,opt,name=MessageSendTime,proto3" json:"MessageSendTime,omitempty"`                 // 消息发送时间戳，精确到毫秒, 服务器接收到的时间算
}

func (x *MsgItem) Reset() {
	*x = MsgItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_im_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgItem) ProtoMessage() {}

func (x *MsgItem) ProtoReflect() protoreflect.Message {
	mi := &file_im_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgItem.ProtoReflect.Descriptor instead.
func (*MsgItem) Descriptor() ([]byte, []int) {
	return file_im_proto_rawDescGZIP(), []int{2}
}

func (x *MsgItem) GetCode() MessageCode {
	if x != nil {
		return x.Code
	}
	return MessageCode_MessageCodeCustom
}

func (x *MsgItem) GetChatroomType() ChatroomType {
	if x != nil {
		return x.ChatroomType
	}
	return ChatroomType_Unknown
}

func (x *MsgItem) GetChatroomId() int64 {
	if x != nil {
		return x.ChatroomId
	}
	return 0
}

func (x *MsgItem) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *MsgItem) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *MsgItem) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *MsgItem) GetDeviceID() string {
	if x != nil {
		return x.DeviceID
	}
	return ""
}

func (x *MsgItem) GetClientType() string {
	if x != nil {
		return x.ClientType
	}
	return ""
}

func (x *MsgItem) GetMessageSendTime() int64 {
	if x != nil {
		return x.MessageSendTime
	}
	return 0
}

// 消息体 - 认证信息
type MsgAuth struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceID    string `protobuf:"bytes,1,opt,name=DeviceID,proto3" json:"DeviceID,omitempty"`
	UserID      int64  `protobuf:"varint,2,opt,name=UserID,proto3" json:"UserID,omitempty"`
	AccessToken string `protobuf:"bytes,3,opt,name=AccessToken,proto3" json:"AccessToken,omitempty"`
	DeviceType  string `protobuf:"bytes,4,opt,name=DeviceType,proto3" json:"DeviceType,omitempty"` // 设备类型, 移动端:mobile , 桌面端:desktop
	ClientType  string `protobuf:"bytes,5,opt,name=ClientType,proto3" json:"ClientType,omitempty"` // 客户端类型, android, ios, web, mac, windows, linux ...
}

func (x *MsgAuth) Reset() {
	*x = MsgAuth{}
	if protoimpl.UnsafeEnabled {
		mi := &file_im_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgAuth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgAuth) ProtoMessage() {}

func (x *MsgAuth) ProtoReflect() protoreflect.Message {
	mi := &file_im_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgAuth.ProtoReflect.Descriptor instead.
func (*MsgAuth) Descriptor() ([]byte, []int) {
	return file_im_proto_rawDescGZIP(), []int{3}
}

func (x *MsgAuth) GetDeviceID() string {
	if x != nil {
		return x.DeviceID
	}
	return ""
}

func (x *MsgAuth) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *MsgAuth) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *MsgAuth) GetDeviceType() string {
	if x != nil {
		return x.DeviceType
	}
	return ""
}

func (x *MsgAuth) GetClientType() string {
	if x != nil {
		return x.ClientType
	}
	return ""
}

// 消息体 - 消息回执
type MsgACK struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageId string `protobuf:"bytes,1,opt,name=MessageId,proto3" json:"MessageId,omitempty"`
	UserId    int64  `protobuf:"varint,2,opt,name=UserId,proto3" json:"UserId,omitempty"`    // 用户ID
	DeviceID  string `protobuf:"bytes,3,opt,name=DeviceID,proto3" json:"DeviceID,omitempty"` // 设备ID
}

func (x *MsgACK) Reset() {
	*x = MsgACK{}
	if protoimpl.UnsafeEnabled {
		mi := &file_im_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgACK) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgACK) ProtoMessage() {}

func (x *MsgACK) ProtoReflect() protoreflect.Message {
	mi := &file_im_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgACK.ProtoReflect.Descriptor instead.
func (*MsgACK) Descriptor() ([]byte, []int) {
	return file_im_proto_rawDescGZIP(), []int{4}
}

func (x *MsgACK) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *MsgACK) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *MsgACK) GetDeviceID() string {
	if x != nil {
		return x.DeviceID
	}
	return ""
}

// 消息体 - 客户端退出
type MsgQuit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title   string `protobuf:"bytes,1,opt,name=Title,proto3" json:"Title,omitempty"`     // 标题
	Content string `protobuf:"bytes,2,opt,name=Content,proto3" json:"Content,omitempty"` // 内容 html格式: (你的账号在其他设备登陆<br>如不是你本人登陆请<a href="">修改密码</a> | 系统奔溃 | 主动退出 | 等等)
}

func (x *MsgQuit) Reset() {
	*x = MsgQuit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_im_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgQuit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgQuit) ProtoMessage() {}

func (x *MsgQuit) ProtoReflect() protoreflect.Message {
	mi := &file_im_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgQuit.ProtoReflect.Descriptor instead.
func (*MsgQuit) Descriptor() ([]byte, []int) {
	return file_im_proto_rawDescGZIP(), []int{5}
}

func (x *MsgQuit) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *MsgQuit) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

var File_im_proto protoreflect.FileDescriptor

var file_im_proto_rawDesc = []byte{
	0x0a, 0x08, 0x69, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x70, 0x62, 0x73, 0x22,
	0xa7, 0x01, 0x0a, 0x0a, 0x4d, 0x73, 0x67, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x06, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x70, 0x62, 0x73, 0x2e, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a,
	0x0a, 0x53, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x53, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1e, 0x0a,
	0x0a, 0x42, 0x6f, 0x64, 0x79, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x42, 0x6f, 0x64, 0x79, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x1a, 0x0a,
	0x08, 0x42, 0x6f, 0x64, 0x79, 0x44, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x08, 0x42, 0x6f, 0x64, 0x79, 0x44, 0x61, 0x74, 0x61, 0x22, 0x7b, 0x0a, 0x05, 0x4d, 0x73, 0x67,
	0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x68, 0x61, 0x74, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x43, 0x68, 0x61, 0x74, 0x72, 0x6f, 0x6f, 0x6d,
	0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x49, 0x44, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0xbc, 0x02, 0x0a, 0x07, 0x4d, 0x73, 0x67, 0x49, 0x74,
	0x65, 0x6d, 0x12, 0x24, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x10, 0x2e, 0x70, 0x62, 0x73, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f,
	0x64, 0x65, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x35, 0x0a, 0x0c, 0x43, 0x68, 0x61, 0x74,
	0x72, 0x6f, 0x6f, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11,
	0x2e, 0x70, 0x62, 0x73, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x72, 0x6f, 0x6f, 0x6d, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x0c, 0x43, 0x68, 0x61, 0x74, 0x72, 0x6f, 0x6f, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x43, 0x68, 0x61, 0x74, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x43, 0x68, 0x61, 0x74, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x44, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x65, 0x6e,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x9f, 0x01, 0x0a, 0x07, 0x4d, 0x73, 0x67, 0x41, 0x75, 0x74,
	0x68, 0x12, 0x1a, 0x0a, 0x08, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x44, 0x12, 0x16, 0x0a,
	0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x41, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0x5a, 0x0a, 0x06, 0x4d, 0x73, 0x67, 0x41, 0x43,
	0x4b, 0x12, 0x1c, 0x0a, 0x09, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x49, 0x44, 0x22, 0x39, 0x0a, 0x07, 0x4d, 0x73, 0x67, 0x51, 0x75, 0x69, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2a, 0x76,
	0x0a, 0x06, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x69,
	0x67, 0x6e, 0x49, 0x6e, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x53, 0x79, 0x6e, 0x63, 0x54, 0x72,
	0x69, 0x67, 0x67, 0x65, 0x72, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x10, 0x03, 0x12, 0x0e, 0x0a, 0x0a, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x41,
	0x43, 0x4b, 0x10, 0x04, 0x12, 0x08, 0x0a, 0x04, 0x41, 0x75, 0x74, 0x68, 0x10, 0x0a, 0x12, 0x08,
	0x0a, 0x04, 0x51, 0x75, 0x69, 0x74, 0x10, 0x0b, 0x12, 0x0c, 0x0a, 0x08, 0x48, 0x65, 0x61, 0x64,
	0x62, 0x65, 0x61, 0x74, 0x10, 0x64, 0x2a, 0xc1, 0x01, 0x0a, 0x0b, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x15, 0x0a, 0x11, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x43, 0x6f, 0x64, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x10, 0x00, 0x12, 0x13, 0x0a,
	0x0f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x54, 0x65, 0x78, 0x74,
	0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x64,
	0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x10, 0x02, 0x12, 0x17, 0x0a, 0x13, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x10,
	0x03, 0x12, 0x14, 0x0a, 0x10, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x64, 0x65,
	0x56, 0x69, 0x64, 0x65, 0x6f, 0x10, 0x04, 0x12, 0x14, 0x0a, 0x10, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x10, 0x05, 0x12, 0x13, 0x0a,
	0x0f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x46, 0x69, 0x6c, 0x65,
	0x10, 0x06, 0x12, 0x16, 0x0a, 0x12, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x64,
	0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x10, 0x07, 0x2a, 0x32, 0x0a, 0x0c, 0x43, 0x68,
	0x61, 0x74, 0x72, 0x6f, 0x6f, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x6e,
	0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x69, 0x6e, 0x67, 0x6c,
	0x65, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x10, 0x02, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_im_proto_rawDescOnce sync.Once
	file_im_proto_rawDescData = file_im_proto_rawDesc
)

func file_im_proto_rawDescGZIP() []byte {
	file_im_proto_rawDescOnce.Do(func() {
		file_im_proto_rawDescData = protoimpl.X.CompressGZIP(file_im_proto_rawDescData)
	})
	return file_im_proto_rawDescData
}

var file_im_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_im_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_im_proto_goTypes = []interface{}{
	(Action)(0),        // 0: pbs.Action
	(MessageCode)(0),   // 1: pbs.MessageCode
	(ChatroomType)(0),  // 2: pbs.ChatroomType
	(*MsgPackage)(nil), // 3: pbs.MsgPackage
	(*MsgID)(nil),      // 4: pbs.MsgID
	(*MsgItem)(nil),    // 5: pbs.MsgItem
	(*MsgAuth)(nil),    // 6: pbs.MsgAuth
	(*MsgACK)(nil),     // 7: pbs.MsgACK
	(*MsgQuit)(nil),    // 8: pbs.MsgQuit
}
var file_im_proto_depIdxs = []int32{
	0, // 0: pbs.MsgPackage.Action:type_name -> pbs.Action
	1, // 1: pbs.MsgItem.Code:type_name -> pbs.MessageCode
	2, // 2: pbs.MsgItem.ChatroomType:type_name -> pbs.ChatroomType
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_im_proto_init() }
func file_im_proto_init() {
	if File_im_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_im_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgPackage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_im_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_im_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_im_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgAuth); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_im_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgACK); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_im_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgQuit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_im_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_im_proto_goTypes,
		DependencyIndexes: file_im_proto_depIdxs,
		EnumInfos:         file_im_proto_enumTypes,
		MessageInfos:      file_im_proto_msgTypes,
	}.Build()
	File_im_proto = out.File
	file_im_proto_rawDesc = nil
	file_im_proto_goTypes = nil
	file_im_proto_depIdxs = nil
}
