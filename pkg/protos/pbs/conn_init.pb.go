// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: conn_init.proto

package pbs

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type DeliverMessageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   string      `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`       // 用户ID
	DeviceId string      `protobuf:"bytes,2,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"` // 设备ID
	Message  *MsgPackage `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`                   // 数据
}

func (x *DeliverMessageReq) Reset() {
	*x = DeliverMessageReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conn_init_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeliverMessageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeliverMessageReq) ProtoMessage() {}

func (x *DeliverMessageReq) ProtoReflect() protoreflect.Message {
	mi := &file_conn_init_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeliverMessageReq.ProtoReflect.Descriptor instead.
func (*DeliverMessageReq) Descriptor() ([]byte, []int) {
	return file_conn_init_proto_rawDescGZIP(), []int{0}
}

func (x *DeliverMessageReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *DeliverMessageReq) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *DeliverMessageReq) GetMessage() *MsgPackage {
	if x != nil {
		return x.Message
	}
	return nil
}

type DeliverMessageResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeliverMessageResp) Reset() {
	*x = DeliverMessageResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conn_init_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeliverMessageResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeliverMessageResp) ProtoMessage() {}

func (x *DeliverMessageResp) ProtoReflect() protoreflect.Message {
	mi := &file_conn_init_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeliverMessageResp.ProtoReflect.Descriptor instead.
func (*DeliverMessageResp) Descriptor() ([]byte, []int) {
	return file_conn_init_proto_rawDescGZIP(), []int{1}
}

var File_conn_init_proto protoreflect.FileDescriptor

var file_conn_init_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x6e, 0x5f, 0x69, 0x6e, 0x69, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x03, 0x70, 0x62, 0x73, 0x1a, 0x08, 0x69, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x74, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70,
	0x62, 0x73, 0x2e, 0x4d, 0x73, 0x67, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x14, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65,
	0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x32, 0xf1, 0x01, 0x0a,
	0x08, 0x43, 0x6f, 0x6e, 0x6e, 0x49, 0x6e, 0x69, 0x74, 0x12, 0x46, 0x0a, 0x13, 0x44, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x79, 0x55, 0x49, 0x44,
	0x12, 0x16, 0x2e, 0x70, 0x62, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x70, 0x62, 0x73, 0x2e, 0x44,
	0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x4c, 0x0a, 0x19, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x42, 0x79, 0x55, 0x49, 0x44, 0x41, 0x6e, 0x64, 0x44, 0x49, 0x44, 0x12, 0x16,
	0x2e, 0x70, 0x62, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x70, 0x62, 0x73, 0x2e, 0x44, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x4f, 0x0a, 0x1c, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x42, 0x79, 0x55, 0x49, 0x44, 0x41, 0x6e, 0x64, 0x4e, 0x6f, 0x74, 0x44, 0x49, 0x44, 0x12,
	0x16, 0x2e, 0x70, 0x62, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x70, 0x62, 0x73, 0x2e, 0x44, 0x65,
	0x6c, 0x69, 0x76, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_conn_init_proto_rawDescOnce sync.Once
	file_conn_init_proto_rawDescData = file_conn_init_proto_rawDesc
)

func file_conn_init_proto_rawDescGZIP() []byte {
	file_conn_init_proto_rawDescOnce.Do(func() {
		file_conn_init_proto_rawDescData = protoimpl.X.CompressGZIP(file_conn_init_proto_rawDescData)
	})
	return file_conn_init_proto_rawDescData
}

var file_conn_init_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_conn_init_proto_goTypes = []interface{}{
	(*DeliverMessageReq)(nil),  // 0: pbs.DeliverMessageReq
	(*DeliverMessageResp)(nil), // 1: pbs.DeliverMessageResp
	(*MsgPackage)(nil),         // 2: pbs.MsgPackage
}
var file_conn_init_proto_depIdxs = []int32{
	2, // 0: pbs.DeliverMessageReq.message:type_name -> pbs.MsgPackage
	0, // 1: pbs.ConnInit.DeliverMessageByUID:input_type -> pbs.DeliverMessageReq
	0, // 2: pbs.ConnInit.DeliverMessageByUIDAndDID:input_type -> pbs.DeliverMessageReq
	0, // 3: pbs.ConnInit.DeliverMessageByUIDAndNotDID:input_type -> pbs.DeliverMessageReq
	1, // 4: pbs.ConnInit.DeliverMessageByUID:output_type -> pbs.DeliverMessageResp
	1, // 5: pbs.ConnInit.DeliverMessageByUIDAndDID:output_type -> pbs.DeliverMessageResp
	1, // 6: pbs.ConnInit.DeliverMessageByUIDAndNotDID:output_type -> pbs.DeliverMessageResp
	4, // [4:7] is the sub-list for method output_type
	1, // [1:4] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_conn_init_proto_init() }
func file_conn_init_proto_init() {
	if File_conn_init_proto != nil {
		return
	}
	file_im_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_conn_init_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeliverMessageReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conn_init_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeliverMessageResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_conn_init_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_conn_init_proto_goTypes,
		DependencyIndexes: file_conn_init_proto_depIdxs,
		MessageInfos:      file_conn_init_proto_msgTypes,
	}.Build()
	File_conn_init_proto = out.File
	file_conn_init_proto_rawDesc = nil
	file_conn_init_proto_goTypes = nil
	file_conn_init_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ConnInitClient is the client API for ConnInit service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ConnInitClient interface {
	//  消息投递
	DeliverMessageByUID(ctx context.Context, in *DeliverMessageReq, opts ...grpc.CallOption) (*DeliverMessageResp, error)
	DeliverMessageByUIDAndDID(ctx context.Context, in *DeliverMessageReq, opts ...grpc.CallOption) (*DeliverMessageResp, error)
	DeliverMessageByUIDAndNotDID(ctx context.Context, in *DeliverMessageReq, opts ...grpc.CallOption) (*DeliverMessageResp, error)
}

type connInitClient struct {
	cc grpc.ClientConnInterface
}

func NewConnInitClient(cc grpc.ClientConnInterface) ConnInitClient {
	return &connInitClient{cc}
}

func (c *connInitClient) DeliverMessageByUID(ctx context.Context, in *DeliverMessageReq, opts ...grpc.CallOption) (*DeliverMessageResp, error) {
	out := new(DeliverMessageResp)
	err := c.cc.Invoke(ctx, "/pbs.ConnInit/DeliverMessageByUID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *connInitClient) DeliverMessageByUIDAndDID(ctx context.Context, in *DeliverMessageReq, opts ...grpc.CallOption) (*DeliverMessageResp, error) {
	out := new(DeliverMessageResp)
	err := c.cc.Invoke(ctx, "/pbs.ConnInit/DeliverMessageByUIDAndDID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *connInitClient) DeliverMessageByUIDAndNotDID(ctx context.Context, in *DeliverMessageReq, opts ...grpc.CallOption) (*DeliverMessageResp, error) {
	out := new(DeliverMessageResp)
	err := c.cc.Invoke(ctx, "/pbs.ConnInit/DeliverMessageByUIDAndNotDID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ConnInitServer is the server API for ConnInit service.
type ConnInitServer interface {
	//  消息投递
	DeliverMessageByUID(context.Context, *DeliverMessageReq) (*DeliverMessageResp, error)
	DeliverMessageByUIDAndDID(context.Context, *DeliverMessageReq) (*DeliverMessageResp, error)
	DeliverMessageByUIDAndNotDID(context.Context, *DeliverMessageReq) (*DeliverMessageResp, error)
}

// UnimplementedConnInitServer can be embedded to have forward compatible implementations.
type UnimplementedConnInitServer struct {
}

func (*UnimplementedConnInitServer) DeliverMessageByUID(context.Context, *DeliverMessageReq) (*DeliverMessageResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeliverMessageByUID not implemented")
}
func (*UnimplementedConnInitServer) DeliverMessageByUIDAndDID(context.Context, *DeliverMessageReq) (*DeliverMessageResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeliverMessageByUIDAndDID not implemented")
}
func (*UnimplementedConnInitServer) DeliverMessageByUIDAndNotDID(context.Context, *DeliverMessageReq) (*DeliverMessageResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeliverMessageByUIDAndNotDID not implemented")
}

func RegisterConnInitServer(s *grpc.Server, srv ConnInitServer) {
	s.RegisterService(&_ConnInit_serviceDesc, srv)
}

func _ConnInit_DeliverMessageByUID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeliverMessageReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConnInitServer).DeliverMessageByUID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pbs.ConnInit/DeliverMessageByUID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConnInitServer).DeliverMessageByUID(ctx, req.(*DeliverMessageReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ConnInit_DeliverMessageByUIDAndDID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeliverMessageReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConnInitServer).DeliverMessageByUIDAndDID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pbs.ConnInit/DeliverMessageByUIDAndDID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConnInitServer).DeliverMessageByUIDAndDID(ctx, req.(*DeliverMessageReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ConnInit_DeliverMessageByUIDAndNotDID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeliverMessageReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConnInitServer).DeliverMessageByUIDAndNotDID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pbs.ConnInit/DeliverMessageByUIDAndNotDID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConnInitServer).DeliverMessageByUIDAndNotDID(ctx, req.(*DeliverMessageReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _ConnInit_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pbs.ConnInit",
	HandlerType: (*ConnInitServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "DeliverMessageByUID",
			Handler:    _ConnInit_DeliverMessageByUID_Handler,
		},
		{
			MethodName: "DeliverMessageByUIDAndDID",
			Handler:    _ConnInit_DeliverMessageByUIDAndDID_Handler,
		},
		{
			MethodName: "DeliverMessageByUIDAndNotDID",
			Handler:    _ConnInit_DeliverMessageByUIDAndNotDID_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "conn_init.proto",
}
